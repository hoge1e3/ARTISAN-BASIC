10 REM BLIT GRAPHICS TEST
20 COLOR 15,1,1:SCREEN 2,2:CLEAR 300,&HC000:DEFINT A-Z
30 REM TILE REQUEST ARRAY (DATA POINTER,ROWS,COLUMNS,DEST ADDRESS,TO NEXT ROW ADD-TO VALUE,HORIZONTAL TILES, VERTICAL TILES)
40 REM BLIT REQUEST ARRAY (HORIZONTAL SHIFT,VERTICAL SHIFT,BACKGROUND DATA,BACKGROUND TO NEXT ROW ADD-TO VALUE,MASK DATA POINTER,CHARACTER DATA POINTER,MASK AND CHARACTER ADD-TO VALUE,COLS,ROWS)
50 REM BOX COPY REQUEST ARRAY (SOURCE DATA POINTER,BYTES IN A ROW,ROWS,SOURCE TO NEXT-ROW ADD-TO VALUE,DESTINATION POINTER,DEST TO NEXT-ROW ADD-TO VALUE)
60 REM SET MEMORY BUFFERS, MB=MEM BUFFER FOR DRAWING, SB=ORIGINAL BACKGROUND IMAGE
70 MB=0:_MEMCPY(&H4010,VARPTR(MB),2)
80 SB=&H2000

100 REM FILL COLOR INFO
110 _FILVRM(BASE(11),6144,&H4E,0)
120 REM LOAD TILE AND TILE MEMORY BUFFERS
130 FOR I=0 TO 7:READ A:POKE &HC000+I,A:NEXT
140 DIM TR(6)
150 TR(0)=&HC000:TR(1)=1:TR(2)=1:TR(3)=SB:TR(4)=256:TR(5)=32:TR(6)=24:_TILERAM(VARPTR(TR(0)))
160 TR(3)=MB:_TILERAM(VARPTR(TR(0)))
170 REM COPY ENTIRE BUFFER INTO VRAM
180 _MEMVRM(MB,BASE(12),6144,0)

181 REM BLOAD "OUT.SC2",S
182 REM _VRMMEM(BASE(12),MB,6144)
183 REM _MEMCPY(MB,SB,6144)
184 REM _FILVRM(BASE(11),6144,&H17,0)

200 REM DEFINE CHARACTER AND MASK IN MEMORY
210 BLOAD"KNIGHT2.BIN",&HC008:HI=11:WI=10
220 REM FOR I=0 TO 31:READ A:POKE &HC008+I,A:NEXT:HI=2:WI=2

300 REM DEFINE BLIT REQUEST ARRAY FOR N CHARACTERS
310 N=1
320 DIM BR(8,N-1)
330 FOR I=0 TO N-1
340 BR(3,I)=256:BR(4,I)=&HC008+HI*WI*8:BR(5,I)=&HC008:BR(6,I)=WI*8:BR(7,I)=WI:BR(8,I)=HI
350 NEXT

400 REM DEFINE BOX COPY REQUEST
410 DIM WR (5):WR(3)=256:WR(5)=256

500 REM DEFINE COORDS AND SPEED ARRAYS
510 DIM X(N-1):DIM Y(N-1):DIM VX(N-1):DIM VY(N-1)
520 FOR I=0 TO N-1
530 X(I)=INT(RND(1)*(256-WI*8))
540 Y(I)=INT(RND(1)*(192-HI*8))
550 VX(I)=1:VY(I)=1
560 NEXT

600 REM PROCESS BLIT REQUESTS BASED ON X AND Y AND FIND AREA THAT IS CHANGED
610 XL=32:XR=0:YU=24:YD=0
615 FOR I=0 TO N-1
620 BR(0,I)=X(I) MOD 8:BR(1,I)=Y(I) MOD 8
625 CX=X(I)\8:CY=Y(I)\8
630 BR(2,I)=MB+CY*256+CX*8
640 _BLIT(VARPTR(BR(0,I)))
650 X(I)=X(I)+VX(I):IF X(I)<1 OR X(I)>=256-WI*8 THEN VX(I)=-VX(I)
660 Y(I)=Y(I)+VY(I):IF Y(I)<1 OR Y(I)>=192-HI*8 THEN VY(I)=-VY(I)
670 IF XL>CX-1 THEN XL=CX-1:IF XL<0 THEN XL=0
675 IF YU>CY-1 THEN YU=CY-1:IF YU<0 THEN YU=0
676 IF XR<CX+WI+2 THEN XR=CX+WI+2:IF XR>32 THEN XR=32
677 IF YD<CY+HI+2 THEN YD=CY+HI+2:IF YD>24 THEN YD=24
680 NEXT

700 REM COPY TO VRAM
720 WR(0)=MB+YU*256+XL*8:WR(4)=WR(0)+BASE(12)-MB
721 WR(1)=(XR-XL)*8:WR(2)=YD-YU
730 _BOXMEMVRM(VARPTR(WR(0)))
750 REM _MEMVRM(MB,BASE(12),6144,0)

800 REM CLEAN UP MEMORY BUFFER FROM SOURCE
820 WR(0)=WR(0)-MB+SB:WR(4)=WR(4)-BASE(12)+MB
830 _BOXMEMCPY(VARPTR(WR(0)))
850 REM _MEMCPY(SB,MB,6144)

1000 GOTO 610

1890 REM BACKGROUND DATA
1900 DATA &B10010010, &B01001001
1910 DATA &B00100100, &B10010010
1920 DATA &B01001001, &B00100100
1930 DATA &B10010010, &B01001001
1990 REM CHARACTER DATA
2000 DATA &B00000000
2010 DATA &B00000000
2020 DATA &B00111111
2030 DATA &B00100000
2040 DATA &B00100000
2050 DATA &B00100000
2060 DATA &B00100000
2070 DATA &B00100000
2071 DATA &B00000000
2072 DATA &B00000000
2073 DATA &B11111100
2074 DATA &B00000100
2075 DATA &B00000100
2076 DATA &B00000100
2077 DATA &B00000100
2078 DATA &B00000100
2080 DATA &B00100000
2090 DATA &B00100000
2100 DATA &B00100000
2110 DATA &B00100000
2120 DATA &B00100000
2130 DATA &B00111111
2140 DATA &B00000000
2150 DATA &B00000000
2151 DATA &B00000100
2152 DATA &B00000100
2153 DATA &B00000100
2154 DATA &B00000100
2155 DATA &B00000100
2156 DATA &B11111100
2157 DATA &B00000000
2158 DATA &B00000000
2160 REM MASK DATA
2170 DATA &B11111111
2180 DATA &B11000000
2190 DATA &B10000000
2200 DATA &B10000000
2210 DATA &B10001111
2220 DATA &B10001111
2230 DATA &B10001111
2240 DATA &B10001111
2241 DATA &B11111111
2242 DATA &B00000011
2253 DATA &B00000001
2254 DATA &B00000001
2255 DATA &B11110001
2256 DATA &B11110001
2257 DATA &B11110001
2258 DATA &B11110001
2250 DATA &B10001111
2260 DATA &B10001111
2270 DATA &B10001111
2280 DATA &B10001111
2290 DATA &B10000000
2300 DATA &B10000000
2310 DATA &B11000000
2320 DATA &B11111111
2321 DATA &B11110001
2322 DATA &B11110001
2323 DATA &B11110001
2324 DATA &B11110001
2325 DATA &B00000001
2326 DATA &B00000001
2327 DATA &B00000011
2328 DATA &B11111111