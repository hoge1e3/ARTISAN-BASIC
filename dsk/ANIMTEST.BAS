10 REM BASIC SPRITE ANIMATION TESTS
20 DEFINT A-Z:COLOR 15,1,4:KEYOFF
30 A=0:I=0:O=0:SU=0:A$=""
40 DIM SA(3,31):DIM AD(3):DIM AS(5)
50 _MAXANIMITEMS(24):_MAXANIMDEFS(10):_MAXANIMSPRS(10)

100 REM for 8x8 pat/col change
110 _ANIMITEMPAT(0,4,0,15):_ANIMITEMPAT(1,4,1,14):_ANIMITEMPAT(2,4,2,4):_ANIMITEMPAT(3,4,3,5)
120 REM for 16x16 pat/col chenge
130 _ANIMITEMPAT(4,100,0,15):_ANIMITEMPAT(5,100,1,14):_ANIMITEMPAT(6,100,2,4):_ANIMITEMPAT(7,100,3,5)
140 REM for 8x8 pattern def change
150 _ANIMITEMPTR(8,8,&HB000):_ANIMITEMPTR(9,8,&HB008):_ANIMITEMPTR(10,8,&HB010):_ANIMITEMPTR(11,8,&HB018)
160 REM for 16x16 pattern def change
170 _ANIMITEMPTR(12,8,&HB000):_ANIMITEMPTR(13,8,&HB020):_ANIMITEMPTR(14,8,&HB040):_ANIMITEMPTR(15,8,&HB060)
180 REM for 8x8 pat/col change and manual stepping
190 _ANIMITEMPAT(16,1,0,15):_ANIMITEMPAT(17,1,1,15):_ANIMITEMPAT(18,1,2,15):_ANIMITEMPAT(19,1,3,15)
191 REM for character animation
192 _ANIMITEMPTR(20,3,&HB100):_ANIMITEMPTR(21,3,&HB108):_ANIMITEMPTR(22,3,&HB110):_ANIMITEMPTR(23,3,&HB118)

200 AD(0)=0:AD(1)=1:AD(2)=2:AD(3)=3:_ANIMDEF(0,4,AD)
210 AD(0)=4:AD(1)=5:AD(2)=6:AD(3)=7:_ANIMDEF(1,4,AD)
220 AD(0)=8:AD(1)=9:AD(2)=10:AD(3)=11:_ANIMDEF(2,4,AD)
230 AD(0)=12:AD(1)=13:AD(2)=14:AD(3)=15:_ANIMDEF(3,4,AD)
240 AD(0)=16:AD(1)=17:AD(2)=18:AD(3)=19:_ANIMDEF(4,4,AD)
250 AD(0)=20:AD(1)=21:AD(2)=22:AD(3)=23:_ANIMDEF(5,4,AD)

300 _ANIMSPRITE(0,0,0,1)
310 _ANIMSPRITE(1,1,1,0)
320 _ANIMSPRITE(2,2,2,1)
330 _ANIMSPRITE(3,2,3,1)
340 _ANIMCHAR(4,255,5,1)
350 _ANIMCHAR(5,511,5,1)
360 _ANIMCHAR(6,767,5,1)

500 AS(0)=0:AS(1)=1:AS(3)=4:AS(4)=5:AS(5)=6

600 SCREEN 1,0
610 PRINT "SCREEN 1, 8x8"
620 O=BASE(9):GOSUB 9000
621 _SPRENABLE (SA,SU,0)
622 FOR I=0 TO 31:_SPRSET (I,256,256,I,4):NEXT
623 SA(0,0)=50:SA(1,0)=50
624 SA(0,1)=100:SA(1,1)=50
625 SA(0,2)=50:SA(1,2)=100:SA(2,2)=4:SA(3,2)=9
626 VPOKE BASE(5)+255,255:VPOKE BASE(5)+511,255:VPOKE BASE(5)+767,255
630 SU=1:AS(2)=2:_ANIMSTART(6,AS)
640 A$=INKEY$
650 IF A$="" GOTO 640
660 _ANIMSTOP(6,AS):_SPRDISABLE

700 SCREEN 1,2
710 PRINT "SCREEN 1, 16x16"
720 O=BASE(9):GOSUB 8000
721 _SPRENABLE (SA,SU,0)
722 VPOKE BASE(5)+255,255:VPOKE BASE(5)+511,255:VPOKE BASE(5)+767,255
730 SU=1:AS(2)=3:_ANIMSTART(6,AS)
740 A$=INKEY$
750 IF A$="" GOTO 740
760 _ANIMSTOP(6,AS):_SPRDISABLE

800 SCREEN 2,0
805 OPEN "GRP:" FOR OUTPUT AS #1
810 PRESET(0,0):PRINT#1,"SCREEN 2, 8x8":CLOSE #1
820 O=BASE(14):GOSUB 9000
821 _SPRENABLE (SA,SU,0)
830 SU=1:AS(2)=2:_ANIMSTART(6,AS)
840 A$=INKEY$
850 IF A$="" GOTO 840
860 _ANIMSTOP(6,AS):_SPRDISABLE

900 SCREEN 2,2
905 OPEN "GRP:" FOR OUTPUT AS #1
910 PRESET(0,0):PRINT#1,"SCREEN 2, 16x16":CLOSE #1
920 O=BASE(14):GOSUB 8000
921 _SPRENABLE (SA,SU,0)
930 SU=1:AS(2)=3:_ANIMSTART(6,AS)
940 A$=INKEY$
950 IF A$="" GOTO 940
960 _ANIMSTOP(6,AS):_SPRDISABLE

1000 SCREEN 1,0
1010 PRINT "SCREEN 1, 8x8 manual":PRINT "SPACE to end, other key to cycle"
1020 O=BASE(9):GOSUB 9000
1030 _SPRENABLE (SA,SU,0)
1040 SA(0,1)=256:SA(0,2)=256:SA(2,0)=255
1050 SU=1:_ANIMSPRITE(4,0,4,1)
1060 A$=INKEY$
1070 IF A$="" GOTO 1060
1080 IF A$<>" " THEN _ANIMSTEP(4):GOTO 1060
1090 _SPRDISABLE

7010 SCREEN 0
7020 END

8000 REM LOAD 16x16 SPRITES
8010 RESTORE 10000:FOR I=0 TO 127:READ A:VPOKE O+I,A:POKE &HB000+I,A:NEXT:GOTO 9500

9000 REM LOAD 8x8 SPRITES
9010 RESTORE 20000:FOR I=0 TO 31:READ A:VPOKE O+I,A:POKE &HB000+I,A:NEXT:GOTO 9500

9500 RESTORE 30000:FOR I=0 TO 31:READ A:POKE &HB100+I,A:NEXT:RETURN

10000 REM HIGH_PRIORITY_TARGET_PATTERN_1
10010 DATA &HFF, &HFF, &HC0, &HC0, &HC0, &HC0, &HC0, &HC0
10020 DATA &HC0, &HC0, &HC0, &HC0, &HC0, &HC0, &HFF, &HFF
10030 DATA &HFF, &HFF, &H03, &H03, &H03, &H03, &H03, &H03
10040 DATA &H03, &H03, &H03, &H03, &H03, &H03, &HFF, &HFF
10050 REM HIGH_PRIORITY_TARGET_PATTERN_2
10060 DATA &H00, &H00, &H3F, &H3F, &H30, &H30, &H30, &H30
10070 DATA &H30, &H30, &H30, &H30, &H3F, &H3F, &H00, &H00
10080 DATA &H00, &H00, &HFC, &HFC, &H0C, &H0C, &H0C, &H0C
10090 DATA &H0C, &H0C, &H0C, &H0C, &HFC, &HFC, &H00, &H00
10100 REM HIGH_PRIORITY_TARGET_PATTERN_3
10110 DATA &H00, &H00, &H00, &H00, &H0F, &H0F, &H0C, &H0C
10120 DATA &H0C, &H0C, &H0F, &H0F, &H00, &H00, &H00, &H00
10130 DATA &H00, &H00, &H00, &H00, &HF0, &HF0, &H30, &H30
10140 DATA &H30, &H30, &HF0, &HF0, &H00, &H00, &H00, &H00
10150 REM CIVILIAN_TARGET_PATTERN
10160 DATA &H07, &H1F, &H3F, &H7C, &H7E, &HFF, &HEF, &HE7
10170 DATA &HE3, &HE1, &HE0, &H70, &H78, &H3E, &H1F, &H07
10180 DATA &HE0, &HF8, &HFC, &H1E, &H0E, &H07, &H87, &HC7
10190 DATA &HE7, &HF7, &HFF, &H7E, &H3E, &H7C, &HF8, &HE0

20000 REM MINA_PATTERN_1
20010 DATA &H60, &HD0, &HF0, &HF0, &H60, &H00, &H00, &H00
20020 REM MINA_PATTERN_2
20030 DATA &H60, &HD0, &HE8, &H78, &H30, &H00, &H00, &H00
20040 REM MINA_PATTERN_3
20050 DATA &H70, &HE8, &HF8, &H70, &H00, &H00, &H00, &H00
20060 REM MINA_PATTERN_4
20070 DATA &H30, &H68, &HF8, &HF0, &H60, &H00, &H00, &H00

30000 REM CHARACTER_1
30010 DATA &HFF,&H81,&H81,&H81,&H81,&H81,&H81,&HFF
30020 DATA &H00,&H7E,&H42,&H42,&H42,&H42,&H7E,&H00
30030 DATA &H00,&H00,&H3C,&H24,&H24,&H3C,&H00,&H00
30040 DATA &H00,&H00,&H00,&H18,&H18,&H00,&H00,&H00